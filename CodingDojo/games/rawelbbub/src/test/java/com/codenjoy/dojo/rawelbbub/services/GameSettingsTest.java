package com.codenjoy.dojo.rawelbbub.services;

/*-
 * #%L
 * Codenjoy - it's a dojo-like platform from developers to developers.
 * %%
 * Copyright (C) 2012 - 2022 Codenjoy
 * %%
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public
 * License along with this program.  If not, see
 * <http://www.gnu.org/licenses/gpl-3.0.html>.
 * #L%
 */

import com.codenjoy.dojo.utils.TestUtils;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class GameSettingsTest {

    @Test
    public void shouldGetAllKeys() {
        assertEquals("AI_TICKS_PER_SHOOT         =[Game] Ticks until the next AI shoot\n" +
                    "HERO_TICKS_PER_SHOOT       =[Game] Ticks until the next hero shoot\n" +
                    "OIL_SLIPPERINESS           =[Game] The amount of leaked oil. The more - the more naughty the submarine.\n" +
                    "PENALTY_WALKING_ON_FISHNET =[Game] Penalty time when walking on fishnet\n" +
                    "SHOW_MY_HERO_UNDER_SEAWEED =[Game] Show my tank under seaweed\n" +
                    "ICEBERG_REGENERATE_TIME    =[Game] Iceberg regenerate time\n" +
                    "TICKS_STUCK_BY_FISHNET     =[Game] Ticks AI gets stuck by fishnet\n" +
                    "COUNT_AIS                  =[Game] Count AIs on the board\n" +
                    "TURN_MODE                  =[Game] Turn mode\n" +
                    "AI_PRIZE_PROBABILITY       =[Prize] Count spawn for AI with prize\n" +
                    "AI_PRIZE_SURVIVABILITY     =[Prize] Hits to kill AI with prize\n" +
                    "PRIZE_AVAILABLE_TIMEOUT    =[Prize] The period of prize validity on the field after the appearance\n" +
                    "PRIZE_EFFECT_TIMEOUT       =[Prize] Working time of the prize after catch up\n" +
                    "PRIZES_COUNT               =[Prize] The total number of prize AI and prizes on the board\n" +
                    "PRIZE_BLINK_TIMEOUT        =[Prize] Prize sprite changes every ticks\n" +
                    "CHANCE_IMMORTALITY         =[Chance] Prize immortality\n" +
                    "CHANCE_BREAKING_BAD        =[Chance] Prize breaking bad\n" +
                    "CHANCE_WALKING_ON_FISHNET  =[Chance] Prize walking on fishnet\n" +
                    "CHANCE_VISIBILITY          =[Chance] Prize visibility\n" +
                    "CHANCE_NO_SLIDING          =[Chance] Prize no sliding\n" +
                    "CHANCE_RESERVED            =[Chance] Reserved for autogenerated\n" +
                    "HERO_DIED_PENALTY          =[Score] Kill your hero penalty\n" +
                    "KILL_OTHER_HERO_SCORE      =[Score] Kill other hero score\n" +
                    "KILL_ENEMY_HERO_SCORE      =[Score] Kill enemy hero score\n" +
                    "KILL_AI_SCORE              =[Score] Kill other AI score\n" +
                    "SCORE_COUNTING_TYPE        =[Score] Counting score mode",
                TestUtils.toString(new GameSettings().allKeys()));
    }
}